// Console - це об'єкт, який надає доступ до консолі браузера та дозволяє виконувати операції з налагодженням коду та виведенням інформації.

// функції для виведення інформації в консоль
console.log('Hello world!') // просто повідомлення
console.info('Hello world!') // інформація
console.warn('Hello world!') // попередження
console.error('Hello world!') // помилка
console.debug('Hello world!') // налагодження
// console.exception('Hello world!') // непередбачена помилка
// це все різні функції, які виводять повідомлення в консоль, але в браузері вони відображаються по різному
// -------------------------------------------------------------------------------------------------------------
// .group(label) - групує повідомлення в консолі
// .groupCollapsed(label) - групує повідомлення в консолі, але згортає групу
// .groupEnd() - закриває групу повідомлень

console.group('Group 1')
console.log('Hello world!')
console.log('Hello world!')
console.groupEnd()
// -------------------------------------------------------------------------------------------------------------
// .time(label) - вмикає таймер
// .timeLog(label) - виводить час, який пройшов від моменту вмикання таймера
// .timeEnd(label) - вимикає таймер

const timer = 'Timer 1'
console.time(timer) // вмикає таймер
console.log('Hello')
console.log('world!')
console.timeLog('Timer 1')
console.timeEnd(timer) // вимикає таймер
// буде виведено час, який пройшов від моменту вмикання таймера до моменту вимикання
// -------------------------------------------------------------------------------------------------------------
// .count(label) - виводить кількість викликів функції
// .countReset(label) - скидає лічильник

const count = 'Count'
console.count(count) // буде виведено 1
console.count(count) // буде виведено 2
console.count(count) // буде виведено 3
console.countReset(count) // скидає лічильник
// -------------------------------------------------------------------------------------------------------------
// .trace(value1, value2, ...) - виводить стек викликів функцій до того місця, де була викликана функція trace

const test1 = () => console.trace('trace')
const test2 = () => test1()
const test3 = () => test2()

test3()
// -------------------------------------------------------------------------------------------------------------
// .table(data) - виводить таблицю з даними

const data = [
  { name: 'Vlad', age: 25 },
  { name: 'Elena', age: 23 },
  { name: 'Ivan', age: 30 },
]

console.table(data) // виведе таблицю з даними
console.table(data, ['name']) // виведе таблицю з даними, але тільки з властивістю name
// -------------------------------------------------------------------------------------------------------------
// .assert(assertion, message) - перевіряє умову assertion, якщо вона false, то виводить повідомлення message

let a = 1
let b = 2

console.assert(a === b, 'a не дорівнює b') // виведе повідомлення, оскільки умова не виконується

a = 2
console.assert(a === b, 'a дорівнює b')
// -------------------------------------------------------------------------------------------------------------
// .clear() - очищає консоль
// -------------------------------------------------------------------------------------------------------------
// .dir(object) - виводить властивості об'єкта object
// .dirxml(object) - виводить властивості об'єкта object в форматі XML
// -------------------------------------------------------------------------------------------------------------
// Стилізація тексту в консолі
// Відбувається вона за допомогою спеціальних символів, які вводяться в рядок повідомлення
// %c - вказує на те, що далі йде стилізація

console.log('%cHello world!', 'color: red; font-size: 20px;') // виведе червоний текст з розміром шрифту 20px
