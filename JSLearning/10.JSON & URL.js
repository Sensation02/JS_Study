// #region JSON (JavaScript Object Notation)
// це формат обміну даними, який є текстовим і незалежний від мови програмування
// це для обміну між сервером та сайтом у вигляді строки
// JSON:
// {
//   "name": "bazzil",
//   "id": 1,
//   "status": {
//     "complete": true
//   }
// }

const data = {
  id: 1,
  name: 'Bazzil',
  password: '123456',
  status: {
    isOnline: true,
  },
}
// створення JSON відбувається за допомогою методу JSON.stringify(value, replacer, space)
// де value - це об'єкт, який ми хочемо перетворити в JSON
// replacer - це функція, яка визначає, які властивості об'єкта будуть включені в JSON та які дії можна виконати з ними
// space - це пробіли, які використовуються для форматування JSON
// якщо space - це число, то відступи відбуваються на вказану кількість пробілів
// якщо space - це рядок, то відступи відбуваються на вказану кількість символів
// якщо space - це null, то відступи не відбуваються
const JSONdata = JSON.stringify(
  data,
  (key, value) => {
    if (typeof value === 'string') {
      return value.toUpperCase()
    }
    if (typeof value === 'number') {
      return value + 2
    }
    return key === 'password' ? undefined : value
  },
  1,
) // <== перетворюємо об'єкт в JSON
console.log(JSONdata) // {"id":3,"name":"BAZZIL","password":"123456","status":{"isOnline":true}}
// ===========================================================================================
// створення об'єкта з JSON відбувається за допомогою методу JSON.parse(text, reviver)
// де text - це JSON, який ми хочемо перетворити в об'єкт
// reviver - це функція, яка визначає, які властивості об'єкта будуть включені в JSON та які дії можна виконати з ними
const parsedData = JSON.parse(JSONdata, (key, value) => {
  if (typeof value === 'string') {
    return value.toLowerCase()
  }
  if (typeof value === 'number') {
    return value - 2
  }
  return key === 'password' ? undefined : value
})
console.log(parsedData) // {id: 1, name: "bazzil", status: {…}}
// #endregion

// #region URL (Uniform Resource Locator)
// URL - це, взагалом, адреса ресурсу в інтернеті
// URL складається з протоколу, домену, порта, шляху, параметрів та якоря
// протокол - це HTTP, HTTPS, FTP, FTPS, FILE, MAILTO, TELNET, SSH, ...
// домен - це адреса сайту
// порт - це номер порта, який використовується для з'єднання з сервером
// шлях - це шлях до файлу на сервері
// параметри - це дані, які передаються на сервер
// якір - це ідентифікатор елемента на сторінці

// Також це являється вбудованим об'єктом-сутністю, який містить методи для роботи з URL, що використовуються для ідентифікації та доступу до ресурсів в інтернеті
// ===========================================================================================
// Створення URL відбувається за допомогою конструктора new URL(url, base)
// де url - це адреса ресурсу в інтернеті (або шлях до файлу на сервері)
// base - це базовий URL, який використовується для вирішення відносних URL (необов'язковий параметр, за замовчуванням - це поточна сторінка)
const myLinkedin = new URL(
  'in/vasyl-kaminskyi-1b4129252/',
  'https://www.linkedin.com',
)
console.log(myLinkedin) // на виході цілий об'єкт URL
// -------------------------------------------------------------------------------------------
// Протокол URL можна отримати за допомогою властивості protocol
console.log(myLinkedin.protocol) // https: <== виводить протокол URL
// -------------------------------------------------------------------------------------------
// Домен URL можна отримати за допомогою властивості hostname
console.log(myLinkedin.hostname) // www.linkedin.com <== виводить домен URL
// -------------------------------------------------------------------------------------------
// Порт URL можна отримати за допомогою властивості port
console.log(myLinkedin.port) // <== виводить порт URL
// -------------------------------------------------------------------------------------------
// Шлях URL можна отримати за допомогою властивості pathname
console.log(myLinkedin.pathname) // /in/vasyl-kaminskyi-1b4129252/ <== виводить шлях URL
// -------------------------------------------------------------------------------------------
// Параметри URL можна отримати за допомогою властивості searchParams
console.log(myLinkedin.searchParams) // URLSearchParams { 'in/vasyl-kaminskyi-1b4129252/' } <== виводить параметри URL
// -------------------------------------------------------------------------------------------
// Якір URL можна отримати за допомогою властивості hash
console.log(myLinkedin.hash) // <== виводить якір URL
// -------------------------------------------------------------------------------------------
// Можна отримати повний URL за допомогою властивості href
console.log(myLinkedin.href) // https://www.linkedin.com/in/vasyl-kaminskyi-1b4129252/ <== виводить повний URL
// -------------------------------------------------------------------------------------------
// Можна отримати повний URL за допомогою методу toString()
console.log(myLinkedin.toString()) // https://www.linkedin.com/in/vasyl-kaminskyi-1b4129252/ <== виводить повний URL (так само як і href) але це метод а не властивість
// -------------------------------------------------------------------------------------------
// Можна отримати повний URL за допомогою методу toJSON()
console.log(myLinkedin.toJSON()) // { href: 'https://www.linkedin.com/in/vasyl-kaminskyi-1b4129252/' } <== виводить повний URL (так само як і href)
// -------------------------------------------------------------------------------------------
// Можна отримати повний URL за допомогою методу valueOf()
console.log(myLinkedin.valueOf()) // https://www.linkedin.com/in/vasyl-kaminskyi-1b4129252/ <== виводить повний URL (так само як і href)
// -------------------------------------------------------------------------------------------
// Пароль в URL можна отримати за допомогою властивості password
console.log(new URL('https://user:pass@localhost:3000/')) // <== виводить пароль в URL => pass
// -------------------------------------------------------------------------------------------
// Ім'я користувача в URL можна отримати за допомогою властивості username
console.log(new URL('https://user:pass@localhost:3000/')) // <== виводить ім'я користувача в URL => user
// -------------------------------------------------------------------------------------------
// Пошук Search
console.log(myLinkedin.search) // <== виводить параметри URL (так само як і searchParams) але це властивість а не метод
// -------------------------------------------------------------------------------------------
// SearchParams
// Він має свої методи для роботи з параметрами URL, такі як:
// - append(name, value) - додає новий параметр в URL
// - delete(name) - видаляє параметр з URL
// - get(name) - повертає значення параметра
// - has(name) - перевіряє чи існує параметр в URL
// - keys() - повертає ітератор з назвами параметрів
// - set(name, value) - встановлює нове значення параметра
// - values() - повертає ітератор зі значеннями параметрів
// - entries() - повертає ітератор з масивами [name, value]
// - sort() - сортує параметри URL за їх назвами
// - getAll(name) - повертає масив зі значеннями параметра
// - toString() - повертає параметри URL у вигляді рядка
// - forEach(callback) - викликає функцію для кожного параметра
// -------------------------------------------------------------------------------------------
// .get(name)
console.log(myLinkedin.searchParams.get('in')) // vasyl-kaminskyi-1b4129252 <== виводить значення параметра URL
// -------------------------------------------------------------------------------------------
// .has(name)
console.log(myLinkedin.searchParams.has('in')) // true <== виводить true якщо параметр існує
// -------------------------------------------------------------------------------------------
// .keys()
console.log(myLinkedin.searchParams.keys()) // [URLSearchParams Iterator] { 'in' } <== виводить ключі параметрів URL
// -------------------------------------------------------------------------------------------
// .append(name, value)
myLinkedin.searchParams.append('name', 'Vasyl') // <== додає новий параметр в URL
console.log(myLinkedin.href) // https://www.linkedin.com/in/vasyl-kaminskyi-1b4129252/?name=Vasyl <== виводить повний URL з новим параметром name=Vasyl
// #endregion
